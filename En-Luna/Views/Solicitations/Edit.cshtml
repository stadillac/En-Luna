@using En_Luna.ViewModels;

@model SolicitationEditViewModel
@{
    ViewData["Title"] = "Solicitation";
    ViewData["AddContainer"] = true;
}

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h2>Solicitation</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.EstimatedEndDate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.EstimatedEndDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EstimatedEndDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.TeamMeetingTime, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.TeamMeetingTime, new { htmlAttributes = new { @type = "time", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TeamMeetingTime, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.StateId, Model.States, En_Luna.Constants.Constants.EmptySelectOptionText, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.SharedDriveUrl, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.SharedDriveUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SharedDriveUrl, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <a class="btn btn-primary" asp-area="Admin" asp-controller="Solicitations" asp-action="Index">Cancel</a>
                </div>
            </div>
        </div>
    </div>
}