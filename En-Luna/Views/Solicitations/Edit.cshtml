@using En_Luna.ViewModels;

@model SolicitationEditViewModel
@{
    ViewData["Title"] = "Solicitation";
    ViewData["AddContainer"] = true;
}

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h2>Solicitation</h2>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.EstimatedEndDate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.EstimatedEndDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EstimatedEndDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.TeamMeetingTime, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.TeamMeetingTime, new { htmlAttributes = new { @type = "time", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TeamMeetingTime, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.County, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.County, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.County, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.StateId, Model.States, En_Luna.Constants.Constants.EmptySelectOptionText, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    @Html.LabelFor(model => model.SharedDriveUrl, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.SharedDriveUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SharedDriveUrl, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="card mb-5">
                    <div class="card-header">
                        Roles
                    </div>
                    <div class="card-body">
                        @Html.HiddenFor(model => model.Id)
                        @Html.HiddenFor(model => model.SolicitationRole.SolicitationId)
                        @if (Model.SolicitationRoles.Any())
                        {
                            <div class="row">
                                <div class="col">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                            </tr>
                                            <tr>
                                                <th scope="col">TODO</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (SolicitationRoleViewModel item in Model.SolicitationRoles)
                                            {
                                                <tr>
                                                    <td>TODO</td>
                                                    @*<td>
                                            <a href="/Admin/SolicitationRoles/Edit/@item.Id" class="btn btn-primary">Edit</a>
                                            </td>
                                            <td>
                                            <a href="javascript:void(0);" class="btn btn-danger" onclick="softDelete('/Admin/SolicitationRoles/Delete', @item.Id, this)">Delete</a>
                                            </td>*@
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                    <hr class="p-2" />
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SolicitationRole.ProjectDeliverableId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.SolicitationRole.ProjectDeliverableId, Model.SolicitationRole.ProjectDeliverables, En_Luna.Constants.Constants.EmptySelectOptionText, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SolicitationRole.ProjectDeliverableId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SolicitationRole.Description, htmlAttributes: new { @class = "control-label" })
                                    @Html.TextAreaFor(model => model.SolicitationRole.Description, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SolicitationRole.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SolicitationRole.Workload, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.SolicitationRole.Workload, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SolicitationRole.Workload, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SolicitationRole.DeliverableDeadline, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.SolicitationRole.DeliverableDeadline, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SolicitationRole.DeliverableDeadline, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SolicitationRole.LumpSum, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.SolicitationRole.LumpSum, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SolicitationRole.LumpSum, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SolicitationRole.HourlyRate, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.SolicitationRole.HourlyRate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SolicitationRole.HourlyRate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SolicitationRole.SignBonus, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.SolicitationRole.SignBonus, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SolicitationRole.SignBonus, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <button id="AddRole" class="btn btn-outline-primary">Add Role</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <hr />
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <a class="btn btn-primary" asp-area="Admin" asp-controller="Solicitations" asp-action="Index">Cancel</a>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        var solicitationEdit = {
            init: function() {
                $("#AddRole").on('click', solicitationEdit.addRole);
            },
            addRole: function(e) {
                e.preventDefault();
                
                // todo, take values of fields in solicitation role inputs and create a role
                // add role to model
                // add a line to table
                // clear inputs
            }
        };

        solicitationEdit.init();
    </script>
}